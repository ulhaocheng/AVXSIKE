/**
 *******************************************************************************
 * @version 0.1
 * @date 2021-12-16
 * @copyright Copyright Â© 2021 by University of Luxembourg
 * @author Hao Cheng
 *******************************************************************************
 */

#ifndef _SIDH_H
#define _SIDH_H

#include "curve.h"
#include "utils.h"
#include "random.h"

static const uint64_t vA_gen[6*VNWORDS] = {
  0x2AE2E1A2DF824, 0x767AC2B05ADF4, 0x04AF2326B8B98, 
  0x6BF93A1E6547C, 0x0D623B07E53D8, 0x069E6AB9BB8EF, 
  0x0CED61CE4D5F1, 0x0CF5B65DAEC7B, 0x00000018BE410,  // XPA0
  0x5C3E6D3BC43A0, 0x79F9D0B74840E, 0x2BAA52E3541D9, 
  0x32D5CCAF7D05C, 0x69DB7E5E87FD5, 0x0C9722127D3DD, 
  0x69497CAEFBC85, 0x483F543E40919, 0x000000022751F,  // XPA1
  0x22C45B939DE6B, 0x4BBF1C6FEC6E6, 0x318FA54C4DAE9, 
  0x7E3D63C1E9E02, 0x316C3CD53FD81, 0x3317BEB3C3128, 
  0x2F21A8773AF56, 0x6175B9B81D392, 0x0000001D7CABD,  // XQA0
  0x19E0BFFEEB5A7, 0x5A0A050ADB0F7, 0x405ED5FF7A06F, 
  0x1A03B10F6C513, 0x22664F10121BA, 0x7FBA30A131004, 
  0x7FB7B9F9053B4, 0x0EB6B98F9470C, 0x0000001CAD9B0,  // XQA1 
  0x5A8C66B63EFDD, 0x3CC061101BA4D, 0x243659604A3FC, 
  0x4966C31A526A4, 0x3195671E85156, 0x793DF50E85709, 
  0x09CC61472768C, 0x265C7E80BADD9, 0x000000035D047,  // XRA0
  0x387E4172A529D, 0x5FADDEDB8ADBC, 0x2D41DF39BB61A, 
  0x160831CD32002, 0x2A37BE3180072, 0x64DB1902EC25D, 
  0x4F6466388356A, 0x5EFE844690B5F, 0x0000001C8CF8D,  // XRA1
};

static const uint64_t vB_gen[6*VNWORDS] = {
  0x2AB76EA451E56, 0x46F1C056E5497, 0x10FA54C36A02A, 
  0x7AE46511B4126, 0x5D60864FE6627, 0x3A753410DAF72, 
  0x71E2CBA73F931, 0x0A52C5ED1E23F, 0x00000006657C4,  // XPB0
  0x0000000000000, 0x0000000000000, 0x0000000000000,
  0x0000000000000, 0x0000000000000, 0x0000000000000,
  0x0000000000000, 0x0000000000000, 0x0000000000000,  // XPB1
  0x7C9EC5B5C70BC, 0x700FE1CFAE2A3, 0x04F89290E3EA2, 
  0x3BC6A508A104F, 0x2592233C51EB1, 0x29FF9EDA823BC, 
  0x65BD60F7F5C3A, 0x4668B0C55F22B, 0x0000001F92B59,  // XQB0
  0x0000000000000, 0x0000000000000, 0x0000000000000,
  0x0000000000000, 0x0000000000000, 0x0000000000000,
  0x0000000000000, 0x0000000000000, 0x0000000000000,  // XQB1
  0x7D7F7EE4721CB, 0x7C3E647283B34, 0x1D352411E892E, 
  0x5F7ABA58A05BD, 0x1BF4E6BE1664E, 0x197A34B43767A, 
  0x5BECDCA3EF2B8, 0x3306308D741DC, 0x0000000DEAC6A,  // XRB0
  0x60ED116658D46, 0x51D9230B378B7, 0x46D2DA1139335, 
  0x7AF855C4604F8, 0x02FD45C592529, 0x5CFDB9477491B, 
  0x3D808748490DC, 0x0A6190877BF3F, 0x0000000F83FF6,  // XRB1   
};

// Fixed parameters for isogeny tree computation
static const unsigned int strat_Alice[MAX_Alice-1] = { 
  48, 28, 16, 8, 4, 2, 1, 1, 2, 1, 1, 4, 2, 1, 1, 
  2, 1, 1, 8, 4, 2, 1, 1, 2, 1, 1, 4, 2, 1, 1, 2, 
  1, 1, 13, 7, 4, 2, 1, 1, 2, 1, 1, 3, 2, 1, 1, 
  1, 1, 5, 4, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 21, 
  12, 7, 4, 2, 1, 1, 2, 1, 1, 3, 2, 1, 1, 1, 1, 
  5, 3, 2, 1, 1, 1, 1, 2, 1, 1, 1, 9, 5, 3, 2, 1, 
  1, 1, 1, 2, 1, 1, 1, 4, 2, 1, 1, 1, 2, 1, 1 };

static const unsigned int strat_Bob[MAX_Bob-1] = { 
  66, 33, 17, 9, 5, 3, 2, 1, 1, 1, 1, 2, 1, 1, 1, 4, 
  2, 1, 1, 1, 2, 1, 1, 8, 4, 2, 1, 1, 1, 2, 1, 1, 4, 
  2, 1, 1, 2, 1, 1, 16, 8, 4, 2, 1, 1, 1, 2, 1, 1, 
  4, 2, 1, 1, 2, 1, 1, 8, 4, 2, 1, 1, 2, 1, 1, 4, 2, 
  1, 1, 2, 1, 1, 32, 16, 8, 4, 3, 1, 1, 1, 1, 2, 1, 
  1, 4, 2, 1, 1, 2, 1, 1, 8, 4, 2, 1, 1, 2, 1, 1, 4, 
  2, 1, 1, 2, 1, 1, 16, 8, 4, 2, 1, 1, 2, 1, 1, 4, 
  2, 1, 1, 2, 1, 1, 8, 4, 2, 1, 1, 2, 1, 1, 4, 2, 1, 
  1, 2, 1, 1 };

// 2^448 / 2^11 = 2^437
static const uint64_t montRdiv2048[NWORDS_FIELD] = {
  0x000000000000000E, 0x0000000000000000, 0x0000000000000000, 0x1F6B854796000000, 
  0x3B26F16D4D267308, 0x0A32C244E7383B45, 0x0001264BDCB7B242 };

// 2^448 * 2^11 = 2^459
static const uint64_t montRx2048[NWORDS_FIELD] = {
  0x0000000003A1635C, 0x0000000000000000, 0x0000000000000000, 0x9B6230D6C000000, 
  0x3EC936E7377BF6E0, 0x72D0AE5FC7CFC438, 0x00005C9696AF9D6B };

void random_mod_order_B(unsigned char* random_digits);

void EphemeralKeyGeneration_A(const unsigned char* PrivateKeyA, unsigned char* PublicKeyA);
void EphemeralKeyGeneration_B(const unsigned char* PrivateKeyB, unsigned char* PublicKeyB);
void EphemeralSecretAgreement_A(const unsigned char* PrivateKeyA, const unsigned char* PublicKeyB, unsigned char* SharedSecretA);
void EphemeralSecretAgreement_B(const unsigned char* PrivateKeyB, const unsigned char* PublicKeyA, unsigned char* SharedSecretB);

void EphemeralKeyGenSecAgr_A_parallel(const unsigned char* PrivateKeyA, unsigned char* PublicKeyA, const unsigned char* PublicKeyB, unsigned char* SharedSecretA);

#endif

// p := 0x002341F271773446CFC5FD681C520567BC65C783158AEA3FDC1767AE2FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;

// XPA0 := 0x0003CCFC5E1F050030363E6920A0F7A4C6C71E63DE63A0E6475AF621995705F7C84500CB2BB61E950E19EAB8661D25C4A50ED279646CB48;
// XPA1 := 0x001AD1C1CAE7840EDDA6D8A924520F60E573D3B9DFAC6D189941CB22326D284A8816CC4249410FE80D68047D823C97D705246F869E3EA50;
// XQA0 := 0x000C7461738340EFCF09CE388F666EB38F7F3AFD42DC0B664D9F461F31AA2EDC6B4AB71BD42F4D7C058E13F64B237EF7DDD2ABC0DEB0C6C;
// XQA1 := 0x00025DE37157F50D75D320DD0682AB4A67E471586FBC2D31AA32E6957FA2B2614C4CD40A1E27283EAAF4272AE517847197432E2D61C85F5;
// XRA0 := 0x000F37AB34BA0CEAD94F43CDC50DE06AD19C67CE4928346E829CB92580DA84D7C36506A2516696BBE3AEB523AD7172A6D239513C5FD2516;
// XRA1 := 0x00196CA2ED06A657E90A73543F3902C208F410895B49CF84CD89BE9ED6E4EE7E8DF90B05F3FDB8BDFE489D1B3558E987013F9806036C5AC;

// XPB0 := 0x0008664865EA7D816F03B31E223C26D406A2C6CD0C3D667466056AAE85895EC37368BFC009DFAFCB3D97E639F65E9E45F46573B0637B7A9;
// XQB0 := 0x0012E84D7652558E694BF84C1FBDAAF99B83B4266C32EC65B10457BCAF94C63EB063681E8B1E7398C0B241C19B9665FDB9E1406DA3D3846;
// XRB0 := 0x001CD28597256D4FFE7E002E87870752A8F8A64A1CC78B5A2122074783F51B4FDE90E89C48ED91A8F4A0CCBACBFA7F51A89CE518A52B76C;
// XRB1 := 0x00147073290D78DD0CC8420B1188187D1A49DBFA24F26AAD46B2D9BB547DBB6F63A760ECB0C2B20BE52FB77BD2776C3D14BCBC404736AE4;